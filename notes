import { Injectable } from '@angular/core';
import { environment } from 'src/environments/environment.development';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class AuthService {

  usersURL: string = environment.usersURL;

  constructor(private http: HttpClient) {}

  fetchUsers(): Observable<any[]> {
    return this.http.get<any[]>(this.usersURL).pipe(
      map(users => users.map(user => ({ ...user, role: user.role || 'Read' })))
    );
  }

  userExist(email: string, password: string): Observable<any> {
    return this.fetchUsers().pipe(
      map(users => {
        const user = users.find(u => u.email === email && u.password === password);
        return user ? user.id : false;
      })
    );
  }

  createUser(email: string, password: string, userName: string): Observable<boolean> {
    return this.fetchUsers().pipe(
      map(users => {
        const userExists = users.some(u => u.email === email);

        if (userExists) {
          return false;
        }

        const id = Date.now();
        const newUser = {
          id,
          email,
          password,
          userName,
          role: 'Read',
          tagLine: "",
          github: '',
          linkedIn: '',
          portfolio: ''
        };

        users.push(newUser);
        localStorage.setItem("allUsers", JSON.stringify(users));
        return true;
      })
    );
  }

  validatePassword(password: string): string {
    const minLength = 8;

    if (!/[A-Z]/.test(password)) return "Password should have Uppercase";
    if (!/[a-z]/.test(password)) return "Password should have lowercase";
    if (!/\d/.test(password)) return "Password should have a number";
    if (!/[!@#$%^&*(),.?":{}|<>]/.test(password)) return "Password should have a special character";
    if (password.length < minLength) return "Password should have at least 8 characters";

    return "";
  }
}
--------------
import { Component } from '@angular/core';
import { FormGroup, Validators, FormControl } from '@angular/forms';
import { AuthService } from 'src/app/core/services/auth.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent {
  loginForm = new FormGroup({
    email: new FormControl('', [Validators.required, Validators.email]),
    password: new FormControl('', [Validators.required])
  });

  constructor(private authService: AuthService, private router: Router) { }

  submitted() {
    if (this.loginForm.invalid) {
      return;
    }

    const email = this.loginForm.value.email?.trim();
    const password = this.loginForm.value.password;

    this.authService.userExist(email, password).subscribe(userId => {
      if (!userId) {
        alert("User does not exist!");
        return;
      }

      localStorage.setItem("loggedInUserID", userId);
      this.router.navigate(['/home']);
    });
  }
}

